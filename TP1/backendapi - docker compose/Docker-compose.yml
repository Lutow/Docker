services:
  database:
    image: postgres:15-alpine
    container_name: mypostgres
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-api:
    build:
      context: ./backend-api/src
      dockerfile: Dockerfile
    container_name: backend-api
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  httpd:
    build:
      context: ./apache
      dockerfile: Dockerfile
    container_name: myapache
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      backend-api:
        condition: service_healthy
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
